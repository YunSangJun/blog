---
layout: post
title:  "AWS에서 CI/CD 환경 구성 #2 - 형상 관리 구성, CodeCommit"
author: 윤상준
date: 2019-06-20
categories: cloud
tags:
- aws
- cicd
- devops
- awscodecommit
---

AWS에서 CodeCommit 서비스를 활용하여 형상 관리를 구성하는 방법을 알아보겠습니다.

## 사전 준비

CodeCommit 서비스를 사용하기 위해 아래와 같이 사전 준비를 합니다.

### Git 버전 확인

로컬 환경의 Git 버전이 1.7.9 이상을 지원하는지 확인합니다.

### 권한 생성

IAM 사용자가 CodeCommit 서비스에 접근할 수 있도록 권한을 생성합니다.

1. AWS IAM Console에 접속 > 왼쪽 메뉴의 사용자 메뉴 선택 > CodeCommit 서비스를 사용할 IAM 사용자 선택

2. 메인 화면 > 권한 탭 > `권한 추가` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-06.png){: width="60%"}

3. 권한 부여 방식에서 `기존 정책 직접 연결` 선택 > 권한 리스트에서 `AWSCodeCommitFullAccess` 선택 > `다음 검토` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-07.png)

4. 권한 요약을 리뷰 > `권한 추가` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-08.png)

### Git 자격 증명 생성

Git 클라이언트 툴을 사용해 CodeCommit에 접속하기 위해 자격 증명을 생성합니다.

1. AWS IAM Console에 접속 > 왼쪽 메뉴의 사용자 메뉴 선택 > CodeCommit 서비스를 사용할 IAM 사용자 선택

2. 메인 화면 > 보안 자격 증명 탭 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-09.png){: width="60%"}

3. 페이지 하단으로 이동 > AWS CodeCommit에 대한 HTTPS Git 자격 증명 > `생성` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-10.png)

4. 팝업 화면의 사용자 이름, 비밀번호를 복사해서 보관 > `닫기` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-11.png)

## 저장소(Repository) 생성

- AWS CodeCommit Console에 접속 > 왼쪽 메뉴 > 소스 > 리포지토리 선택

- 메인 화면 > `리포지토리 생성` 버튼을 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-02.png)

- 리포지토리 이름을 `cicd-demo`로 입력 > `생성` 버튼 선택

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-03.png)

- 저장소 생성 완료

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-04.png)

## 저장소(Repository) 사용

### 저장소 복제

앞에서 생성한 `cicd-demo` 저장소를 로컬 환경으로 복제합니다.

1. CodeCommit 콘솔 > 저장소의 복제 명령어 복사

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-12.png)

2. 로컬 환경의 터미널 > 복사한 명령어를 실행

    계정 입력 메세지가 출력되면 사전 준비에서 생성한 git 자격 증명의 사용자 이름, 비밀번호를 입력합니다.

    ```
    $ git clone https://git-codecommit.ap-northeast-2.amazonaws.com/v1/repos/cicd-demo
    Cloning into 'cicd-demo'...
    warning: You appear to have cloned an empty repository.
    $ cd cicd-demo/
    $ ls -a
    .       ..      .git
    ```

### 저장소에 샘플 소스코드 Commit

1. CI/CD 환경 구성에서 사용할 샘플 애플리케이션의 소스코드를 다운로드

    이 문서에서는 [spring-petclinic](https://github.com/spring-projects/spring-petclinic) 프로젝트를 활용하겠습니다.

    웹 브라우저에서 [spring-petclinic](https://github.com/spring-projects/spring-petclinic) 프로젝트에 접속한 후 아래와 같이 소스코드를 다운로드 합니다.

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-13.png)

2. `spring-petclinic-master.zip` 프로젝트의 압축 해제 > `cicd-demo` 폴더로 복사

3. `cicd-demo` 폴더에 추가된 소스코드를 CodeCommit 저장소로 Commit

    ```
    $ git add --all
    $ git commit -m "Init"
    [master (root-commit) 2420d24] Init
    95 files changed, 14563 insertions(+)
    ...
    $ git push
    Counting objects: 141, done.
    Delta compression using up to 8 threads.
    Compressing objects: 100% (127/127), done.
    Writing objects: 100% (141/141), 401.09 KiB | 7.16 MiB/s, done.
    Total 141 (delta 27), reused 0 (delta 0)
    To https://git-codecommit.ap-northeast-2.amazonaws.com/v1/repos/cicd-demo
    * [new branch]      master -> master
    ```

4. CodeCommit 콘솔에 접속

    이제 CodeCommit 콘솔에 접속해보면 저장소에 Commit한 소스코드를 확인할 수 있습니다.

    ![](/blog/assets/images/cloud/aws/cicd/aws-cicd02-14.png)

다음으로 [AWS에서 CI/CD 환경 구성 #3 - 코드 빌드, CodeBuild](/blog/cloud/2019/06/21/aws-cicd03.html)
문서에서 코드 빌드 서비스인 CodeBuild를 구성하는 방법을 살펴보겠습니다.